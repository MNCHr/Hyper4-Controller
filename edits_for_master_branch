EDITS TO MAKE TO HP4-SRC 'MASTER' BRANCH

hp4.p4t:

- if (meta_ctrl.dropped == 0) {
      apply(t_virtnet);
- }

drop.p4t:

action a_drop() {
  drop();
- modify_field(meta_ctrl.dropped, 1);
}

headers.p4t:

header_type meta_ctrl_t {
  // ...
  econd : 1; // whether egress handling mode is 'conditional'
  efilter : 1; // whether we filter if sm.egress_port == sm.ingress_port and
               // virt_fwd_flag == FALSE
- dropped : 1; // mark packet as dropped (0 = not dropped, 1 = dropped)
   }
 }

modify_field.p4t:

table t_mod_XY {
     mod_extracted_extracted;
     mod_meta_extracted;
     mod_extracted_meta;
-    mod_extracted_stdmeta_ingressport;
     _no_op;
   }
 }

EDITS TO MAKE TO HP4-CTRL 'MASTER' BRANCH

p4_hp4.py:

replace:
+    self.pc_bits_extracted[pc_state] = numbits
with:
-    if numbits > self.seb * 8:
-      self.pc_bits_extracted[pc_state] = numbits
-    else:
-      self.pc_bits_extracted[pc_state] = self.seb * 8

replace:
+      if startbytes < self.seb:
+        if endbytes >= self.seb:
with:
-      if startbytes < 20:
-        if endbytes >= 20:

replace:
+        bound = self.seb + 10
with:
-        bound = 30

replace:
+            self.pc_bits_extracted[pc_state] = self.offset
with:
-            if self.offset > self.seb * 8:
-              self.pc_bits_extracted[pc_state] = self.offset
-            else:
-              self.pc_bits_extracted[pc_state] = self.seb * 8

replace:
+          print("TODO: support direct jump to new parse node without extracting more")
+          exit()
with:
-          t.action = "set_next_action"
-          if t.next_pc_state in self.tics_table_names:
-            next_action = "[" + self.tics_table_names[t.next_pc_state].split('tset_')[1].upper() + "]"
-          else:
-            next_action = "[PROCEED]"
-          t.action_params = [next_action, str(t.next_pc_state), str(t.priority)]

virtualdevice.py:
-    ret += 'pushed (user-facing : hp4-facing): (' + str(len(self.nrules)) + ' : ' \
-            + str(len(self.hp4rules)) + ')\n'
-    #ret += 'staged (user-facing : hp4-facing): (' + str(len(self.staged_hp4rules)) \
-    #        + ' : ' + str(len(self.staged_nrules)) + ')'
-    return ret
+    ret += 'pushed (user-facing : hp4-facing): (' + len(self.hp4rules) + ' : ' \
+            + len(self.nrules) + ')\n'
+    ret += 'staged (user-facing : hp4-facing): (' + len(self.staged_hp4rules) \
+            + ' : ' + len(self.staged_nrules) + ')'

copy runt03.sh, runt04.sh from experimental to master
